workflows:
  build-android:
    name: Moodle App Build for Android (.apk)
    max_build_duration: 60

    environment:
      node: 20.18.0
      java: 17
      vars:
        PACKAGE_NAME: "com.upc.moodleapp"
        APP_NAME: "Moodle UPC"
      groups:
        - keystore_group  # Secret vars: CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS, CM_KEY_PASSWORD

    scripts:
      - name: Instalar dependencias
        script: |
          npm install -g @ionic/cli cordova gulp cordova-res
          npm ci || npm install
          ionic build

      - name: Restaurar keystore y crear release-signing.properties
        script: |
          # Restaurar keystore en /tmp y en la RAÍZ del repo (algunos build.gradle lo buscan ahí)
          printf "%s" "$CM_KEYSTORE" | base64 -d > /tmp/release.keystore
          printf "%s" "$CM_KEYSTORE" | base64 -d > "$CM_BUILD_DIR/release.keystore"

          echo "▶ Verificando store password..."
          keytool -list -v -keystore /tmp/release.keystore -storepass "$CM_KEYSTORE_PASSWORD" >/dev/null

          echo "▶ Verificando alias y key password..."
          keytool -list -v \
            -keystore /tmp/release.keystore \
            -storepass "$CM_KEYSTORE_PASSWORD" \
            -alias "$CM_KEY_ALIAS" \
            -keypass "$CM_KEY_PASSWORD" >/dev/null

          echo "✅ Keystore verificado correctamente."

          # Archivo de firma para Gradle/Cordova
          mkdir -p platforms/android
          cat > platforms/android/release-signing.properties <<EOF
          storeFile=$CM_BUILD_DIR/release.keystore
          storePassword=$CM_KEYSTORE_PASSWORD
          keyAlias=$CM_KEY_ALIAS
          keyPassword=$CM_KEY_PASSWORD
          EOF

      - name: Preparar plataforma y (si aplica) limpiar literales de firma
        script: |
          set -e
          ionic cordova platform rm android || true
          ionic cordova platform add android

          ROOT="platforms/android"

          echo "▶ Buscando ocurrencias literales 'CM_KEY_*'…"
          COUNT=$( (grep -RIn "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true) | wc -l )
          echo "Encontradas: $COUNT"

          if [ "$COUNT" -gt 0 ]; then
            echo "▶ Se encontraron literales; aplicando reemplazos puntuales…"
            FILES=$(grep -RIl "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true)
            if [ -n "$FILES" ]; then
              # Reemplazar cadenas literales por valores reales en los archivos detectados
              while IFS= read -r f; do
                # Reemplazos simples y seguros con sed (comillas simples → comillas simples)
                sed -i.bak "s/'CM_KEY_ALIAS'/'$CM_KEY_ALIAS'/g" "$f" || true
                sed -i.bak "s/\"CM_KEY_ALIAS\"/\"$CM_KEY_ALIAS\"/g" "$f" || true

                sed -i.bak "s/'CM_KEYSTORE_PASSWORD'/'$CM_KEYSTORE_PASSWORD'/g" "$f" || true
                sed -i.bak "s/\"CM_KEYSTORE_PASSWORD\"/\"$CM_KEYSTORE_PASSWORD\"/g" "$f" || true

                sed -i.bak "s/'CM_KEY_PASSWORD'/'$CM_KEY_PASSWORD'/g" "$f" || true
                sed -i.bak "s/\"CM_KEY_PASSWORD\"/\"$CM_KEY_PASSWORD\"/g" "$f" || true

                # Asegurar que apunte al keystore de la raíz del repo
                sed -i.bak "s#file('release.keystore')#file('../../release.keystore')#g" "$f" || true
                sed -i.bak "s#file(\"release.keystore\")#file(\"../../release.keystore\")#g" "$f" || true
              done <<< "$FILES"
            fi

            echo "▶ Verificando que ya no queden literales…"
            LEFT=$( (grep -RIn "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true) | wc -l )
            echo "Restantes: $LEFT"
            if [ "$LEFT" -ne 0 ]; then
              echo "❌ Aún quedan literales de firma. Abortando para revisar:"
              (grep -RIn "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true) | head -n 50
              exit 1
            fi
          else
            echo "✅ No hay literales de firma. Continuamos."
          fi

      - name: Construir APK firmado (Gradle/Cordova)
        script: |
          # Forzar APK y decirle explícitamente a Gradle qué properties usar
          ionic cordova build android --prod --release -- \
            --packageType=apk \
            --gradleArg=-PcdvReleaseSigningPropertiesFile=platforms/android/release-signing.properties

    artifacts:
      - platforms/android/app/build/outputs/apk/release/*.apk
