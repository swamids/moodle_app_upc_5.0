workflows:
  build-android-debug:
    name: Moodle App Build for Android (DEBUG - rápido para pruebas de marca)
    max_build_duration: 60

    environment:
      node: 20.18.0
      java: 17
      vars:
        PACKAGE_NAME: "com.upc.moodleapp"
        APP_NAME: "Moodle UPC"

    scripts:
      - name: Instalar dependencias
        script: |
          npm install -g @ionic/cli cordova cordova-res gulp
          npm ci || npm install
          ionic build

      - name: Preparar recursos Android (adaptive icon)
        script: |
          set -e
          mkdir -p resources/android
          # Si tienes un icono base en resources/icon.png, úsalo; si no, crea uno mínimo
          if [ -f resources/icon.png ]; then
            cp resources/icon.png resources/android/icon-background.png
            cp resources/icon.png resources/android/icon-foreground.png
          else
            # PNG 1x1 para salir del paso
            echo iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGNgYAAAAAMAASsJTYQAAAAASUVORK5CYII= | base64 -d > resources/android/icon-background.png
            cp resources/android/icon-background.png resources/android/icon-foreground.png
          fi
          # Generar assets (si ya existen, no rompe)
          ionic cordova resources android --force || true
          echo "✅ Adaptive icon OK."

      - name: Preparar plataforma Android (sin tocar firma)
        script: |
          set -e
          ionic cordova platform rm android || true
          ionic cordova platform add android

      - name: Construir APK (DEBUG)
        script: |
          # Debug no requiere keystore y permite probar cambios de marca rápidamente
          ionic cordova build android --debug -- --packageType=apk

    artifacts:
      - platforms/android/app/build/outputs/apk/debug/*.apk
