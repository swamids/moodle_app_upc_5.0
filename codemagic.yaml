workflows:
  build-android-release:
    name: Moodle App Build for Android (RELEASE AAB)
    max_build_duration: 60

    environment:
      node: 20.18.0
      java: 17
      groups:
        - keystore_group         # CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS, CM_KEY_PASSWORD
        - firebase_group         # GOOGLE_SERVICES_JSON_B64
      vars:
        PACKAGE_NAME: "com.upc.moodleapp"
        APP_NAME: "Moodle UPC"

    scripts:
      - name: Instalar dependencias
        script: |
          set -e
          npm install -g @ionic/cli cordova cordova-res gulp
          npm ci || npm install

      - name: Limpiar y compilar web (Ionic)
        script: |
          set -e
          rm -rf www platforms/android || true
          ionic build

      - name: Recursos (icon/adaptive)
        script: |
          set -e
          [ -f resources/icon.png ] || { echo "❌ Falta resources/icon.png"; exit 1; }
          mkdir -p resources/android
          cp resources/icon.png resources/android/icon-foreground.png
          cp resources/icon.png resources/android/icon-background.png
          ionic cordova resources android --force --icon || true

      - name: Preparar plataforma
        script: |
          set -e
          ionic cordova platform add android
          ionic cordova clean android || true

      - name: Restaurar google-services.json (Firebase)
        script: |
          set -e
          if [ -z "$GOOGLE_SERVICES_JSON_B64" ]; then
            echo "❌ Falta GOOGLE_SERVICES_JSON_B64 en el grupo firebase_group"
            exit 1
          fi

          # escribir archivo en la raíz
          printf "%s" "$GOOGLE_SERVICES_JSON_B64" | base64 -d > google-services.json
          ls -lah google-services.json

          # si tienes el <resource-file> en config.xml, Cordova lo copiará a app/google-services.json durante el build.
          # Aun así, lo colocamos también manualmente por si algún plugin lo espera ya en /app/:
          mkdir -p platforms/android/app
          cp -f google-services.json platforms/android/app/google-services.json

          echo "▶ Verificación rápida:"
          APPID=$(xmllint --xpath "string(//widget/@id)" config.xml)
          echo "ApplicationId en config.xml: $APPID"
          grep -q "\"package_name\": \"$APPID\"" google-services.json \
            && echo "✅ google-services.json coincide con $APPID" \
            || { echo "❌ El google-services.json no corresponde a $APPID"; exit 1; }

      - name: Restaurar keystore y validar alias (solo Bash, sin Python)
        script: |
          set -e
          [ -n "$CM_KEYSTORE" ] || { echo "❌ Falta CM_KEYSTORE (base64)"; exit 1; }
          printf "%s" "$CM_KEYSTORE" | base64 -d > /tmp/release.keystore
          keytool -list -v -keystore /tmp/release.keystore -storepass "$CM_KEYSTORE_PASSWORD" >/dev/null
          keytool -list -v -keystore /tmp/release.keystore -storepass "$CM_KEYSTORE_PASSWORD" -alias "$CM_KEY_ALIAS" -keypass "$CM_KEY_PASSWORD" >/dev/null
          echo "✅ Keystore OK"

          # build.json en /tmp para Cordova
          cat > /tmp/build.json <<'JSON'
          {
            "android": {
              "release": {
                "keystore": "/tmp/release.keystore",
                "storePassword": "$CM_KEYSTORE_PASSWORD",
                "alias": "$CM_KEY_ALIAS",
                "password": "$CM_KEY_PASSWORD",
                "packageType": "bundle"
              }
            }
          }
          JSON
          # Expandir variables
          sed -i.bak \
            -e "s|\$CM_KEYSTORE_PASSWORD|$CM_KEYSTORE_PASSWORD|g" \
            -e "s|\$CM_KEY_ALIAS|$CM_KEY_ALIAS|g" \
            -e "s|\$CM_KEY_PASSWORD|$CM_KEY_PASSWORD|g" /tmp/build.json

      - name: Build RELEASE AAB firmado
        script: |
          set -e
          ionic cordova build android --prod --release --buildConfig=/tmp/build.json --packageType=bundle

          echo "► Artefactos generados:"
          find platforms/android/app/build/outputs -type f -maxdepth 3 | sed 's|^|  - |'

    artifacts:
      - platforms/android/app/build/outputs/**/*.aab
      - platforms/android/app/build/outputs/**/*.apk
