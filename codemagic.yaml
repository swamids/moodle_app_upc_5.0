workflows:
  # =========================
  # ANDROID (debug)
  # =========================
  build-android-debug:
    name: Android Debug (branding rápido)
    max_build_duration: 60
    environment:
      groups:
        - keystore_group        # CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS, CM_KEY_PASSWORD
      vars:
        ANDROID_PACKAGE: "com.upc.moodleapp"
        BRAND_COLOR: "#C8102E"
    scripts:
      - name: Install Node deps
        script: |
          npm ci
      - name: Build web
        script: |
          npm run build
      - name: Capacitor sync
        script: |
          npx cap sync android
      - name: Build Android Debug APK
        script: |
          cd android
          ./gradlew assembleDebug
    artifacts:
      - android/app/build/outputs/**/*.apk

  # =========================
  # ANDROID (release con mapping + símbolos)
  # =========================
  build-android-release:
    name: Android Release (AAB + mapping + símbolos)
    max_build_duration: 90
    environment:
      groups:
        - keystore_group        # CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS, CM_KEY_PASSWORD
      vars:
        ANDROID_PACKAGE: "com.upc.moodleapp"
        BRAND_COLOR: "#C8102E"
        # GOOGLE_SERVICES_JSON_B64 (opcional) para com.upc.moodleapp
    scripts:
      - name: Install Node deps
        script: |
          npm ci
      - name: Build web (prod)
        script: |
          npm run build
      - name: Capacitor sync (android)
        script: |
          npx cap sync android
      - name: Decode google-services.json (si aplica)
        script: |
          if [[ -n "$GOOGLE_SERVICES_JSON_B64" ]]; then
            echo "$GOOGLE_SERVICES_JSON_B64" | base64 --decode > android/app/google-services.json
          fi
      - name: Gradle clean & bundleRelease (genera AAB, mapping y símbolos)
        script: |
          cd android
          ./gradlew clean
          ./gradlew --stacktrace --no-daemon bundleRelease
      - name: Recopilar mapping y símbolos nativos
        script: |
          mkdir -p $CM_BUILD_DIR/android_artifacts
          # mapping.txt (R8/ProGuard)
          if [[ -f android/app/build/outputs/mapping/release/mapping.txt ]]; then
            cp -f android/app/build/outputs/mapping/release/mapping.txt $CM_BUILD_DIR/android_artifacts/
          else
            echo "⚠️  No se encontró mapping.txt. ¿Está activado minifyEnabled true en build.gradle?"
          fi
          # native debug symbols
          if [[ -f android/app/build/outputs/native-debug-symbols/release/native-debug-symbols.zip ]]; then
            cp -f android/app/build/outputs/native-debug-symbols/release/native-debug-symbols.zip $CM_BUILD_DIR/android_artifacts/
          else
            echo "⚠️  No se encontró native-debug-symbols.zip. ¿Está configurado ndk.debugSymbolLevel 'SYMBOL_TABLE' en build.gradle?"
          fi
    artifacts:
      - android/app/build/outputs/**/*.aab
      - android_artifacts/**/*

  # =========================
  # iOS DEV (TestFlight interno via API key)
  # =========================
  build-ios-dev:
    name: iOS Dev (TestFlight interno via API key)
    max_build_duration: 90
    environment:
      xcode: latest
      cocoapods: default
      groups:
        - apple_api_key_group   # APP_STORE_CONNECT_ISSUER_ID / KEY_IDENTIFIER / PRIVATE_KEY
      vars:
        IOS_BUNDLE_ID: "com.upc.moodleapp"
        BRAND_COLOR: "#C8102E"
    scripts:
      - name: Install Node deps
        script: |
          npm ci
      - name: Build web
        script: |
          npm run build
      - name: Capacitor sync
        script: |
          npx cap sync ios
      - name: CocoaPods install
        script: |
          cd ios/App
          pod install
      - name: Code signing automático con API key (fetch & keychain)
        script: |
          # Usa las variables del grupo apple_api_key_group
          app-store-connect configure --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
                                      --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
                                      --private-key "$APP_STORE_CONNECT_PRIVATE_KEY"
          app-store-connect fetch-signing-files "$IOS_BUNDLE_ID" --type IOS_APP_STORE --create
          keychain initialize
          app-store-connect keychain add-certificates
      - name: Xcode archive
        script: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -configuration Release -archivePath $CM_BUILD_DIR/App.xcarchive archive CODE_SIGN_STYLE=Automatic
      - name: Export IPA
        script: |
          cat > $CM_BUILD_DIR/exportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>destination</key><string>export</string>
            <key>manageAppVersionAndBuildNumber</key><true/>
          </dict>
          </plist>
          PLIST
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/App.xcarchive \
            -exportOptionsPlist $CM_BUILD_DIR/exportOptions.plist \
            -exportPath $CM_BUILD_DIR/ipa
      - name: Publicar en TestFlight (API key, sin publishing:)
        script: |
          # Sube el IPA a App Store Connect usando las mismas credenciales
          app-store-connect publish \
            --path "$CM_BUILD_DIR/ipa/App.ipa" \
            --primary-bundle-id "$IOS_BUNDLE_ID" \
            --submit-to-testflight true \
            --beta-group "Internal Testers"
    artifacts:
      - ipa/*.ipa
      - App.xcarchive

  # =========================
  # iOS RELEASE (App Store / TestFlight via API key)
  # =========================
  build-ios-release:
    name: iOS Release (App Store / TestFlight via API key)
    max_build_duration: 120
    environment:
      xcode: latest
      cocoapods: default
      groups:
        - apple_api_key_group   # APP_STORE_CONNECT_ISSUER_ID / KEY_IDENTIFIER / PRIVATE_KEY
      vars:
        IOS_BUNDLE_ID: "com.upc.moodleapp"
        BRAND_COLOR: "#C8102E"
    scripts:
      - name: Install Node deps
        script: |
          npm ci
      - name: Build web (prod)
        script: |
          npm run build
      - name: Capacitor sync
        script: |
          npx cap sync ios
      - name: CocoaPods install
        script: |
          cd ios/App
          pod install
      - name: Automatic code signing con API key
        script: |
          app-store-connect configure --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
                                      --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
                                      --private-key "$APP_STORE_CONNECT_PRIVATE_KEY"
          app-store-connect fetch-signing-files "$IOS_BUNDLE_ID" --type IOS_APP_STORE --create
          keychain initialize
          app-store-connect keychain add-certificates
      - name: Xcode archive
        script: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -configuration Release -archivePath $CM_BUILD_DIR/App.xcarchive archive CODE_SIGN_STYLE=Automatic
      - name: Export IPA (App Store)
        script: |
          cat > $CM_BUILD_DIR/exportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>destination</key><string>export</string>
            <key>manageAppVersionAndBuildNumber</key><true/>
          </dict>
          </plist>
          PLIST
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/App.xcarchive \
            -exportOptionsPlist $CM_BUILD_DIR/exportOptions.plist \
            -exportPath $CM_BUILD_DIR/ipa
      - name: Publicar en TestFlight (API key)
        script: |
          app-store-connect publish \
            --path "$CM_BUILD_DIR/ipa/App.ipa" \
            --primary-bundle-id "$IOS_BUNDLE_ID" \
            --submit-to-testflight true \
            --beta-group "Internal Testers"
    artifacts:
      - ipa/*.ipa
      - App.xcarchive
