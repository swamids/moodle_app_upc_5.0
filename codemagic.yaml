workflows:
  build-android:
    name: Moodle App Build for Android (.apk)
    max_build_duration: 60

    environment:
      node: 20.18.0
      java: 17
      vars:
        PACKAGE_NAME: "com.upc.moodleapp"
        APP_NAME: "Moodle UPC"
      groups:
        - keystore_group  # Secret vars: CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS, CM_KEY_PASSWORD

    scripts:
      - name: Instalar dependencias
        script: |
          npm install -g @ionic/cli cordova gulp
          npm ci || npm install
          ionic build

      - name: Restaurar y verificar keystore
        script: |
          # Restaurar keystore en /tmp y en la RAÍZ del repo (gradle lo busca ahí)
          printf "%s" "$CM_KEYSTORE" | base64 -d > /tmp/release.keystore
          printf "%s" "$CM_KEYSTORE" | base64 -d > "$CM_BUILD_DIR/release.keystore"

          echo "▶ Verificando store password..."
          keytool -list -v -keystore /tmp/release.keystore -storepass "$CM_KEYSTORE_PASSWORD" >/dev/null

          echo "▶ Verificando alias y key password..."
          keytool -list -v \
            -keystore /tmp/release.keystore \
            -storepass "$CM_KEYSTORE_PASSWORD" \
            -alias "$CM_KEY_ALIAS" \
            -keypass "$CM_KEY_PASSWORD" >/dev/null

          echo "✅ Keystore verificado correctamente."

      - name: Preparar plataforma y reemplazar literales de firma en todo platforms/android
        script: |
          set -e
          ionic cordova platform rm android || true
          ionic cordova platform add android

          ROOT="platforms/android"

          echo "▶ Buscando ocurrencias literales antes del reemplazo…"
          (grep -RIn "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true) | wc -l

          # Reemplazos seguros (quote de metacaracteres con perl \Q...\E)
          perl -0777 -pe "s/CM_KEY_ALIAS/\Q$CM_KEY_ALIAS\E/g" -i $(git -C "$ROOT" ls-files '*.gradle' '*.gradle.kts' '*.properties' 2>/dev/null || find "$ROOT" -type f \( -name '*.gradle' -o -name '*.gradle.kts' -o -name '*.properties' \))
          perl -0777 -pe "s/CM_KEYSTORE_PASSWORD/\Q$CM_KEYSTORE_PASSWORD\E/g" -i $(git -C "$ROOT" ls-files '*.gradle' '*.gradle.kts' '*.properties' 2>/dev/null || find "$ROOT" -type f \( -name '*.gradle' -o -name '*.gradle.kts' -o -name '*.properties' \))
          perl -0777 -pe "s/CM_KEY_PASSWORD/\Q$CM_KEY_PASSWORD\E/g" -i $(git -C "$ROOT" ls-files '*.gradle' '*.gradle.kts' '*.properties' 2>/dev/null || find "$ROOT" -type f \( -name '*.gradle' -o -name '*.gradle.kts' -o -name '*.properties' \))

          # Asegurar que la ruta de keystore apunte a la raíz del repo
          find "$ROOT" -type f -name "*.gradle" -o -name "*.gradle.kts" | while read f; do
            perl -0777 -pe "s/file\(['\"]release\.keystore['\"]\)/file('../../release.keystore')/g" -i "$f"
          done

          echo "▶ Verificando ocurrencias literales después del reemplazo… (debe ser 0)"
          LEFT=$( (grep -RIn "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true) | wc -l )
          echo "Restantes: $LEFT"
          if [ "$LEFT" -ne 0 ]; then
            echo "❌ Aún quedan literales de firma. Abortando para evitar otro fallo."
            (grep -RIn "CM_KEY_ALIAS\|CM_KEYSTORE_PASSWORD\|CM_KEY_PASSWORD" "$ROOT" || true) | head -n 50
            exit 1
          fi

      - name: Construir APK firmado (Gradle/Cordova)
        script: |
          # Forzar APK (no AAB). El build usará los valores ya inyectados.
          ionic cordova build android --prod --release -- --packageType=apk

    artifacts:
      - platforms/android/app/build/outputs/apk/release/*.apk
